<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spopia.infra.modules.member.MemberMapper">

    <resultMap id="resultMapObj" type="com.spopia.infra.modules.member.Member"></resultMap>
    
    <sql id ="selectCommon">
		FROM user u
			inner join teamUser tu on tu.user_seq = u.seq
			inner join team t on t.teamSeq = tu.team_seq
		WHERE 1=1
			and tu.defaultNY = 0
		<if test="shDelNy != null and !shDelNy.equals('')">AND uDelNy = #{shDelNy}</if>
		<choose>
			<when test="shOption == 1">AND seq = #{shValue}</when>
			<when test="shOption == 2">AND name LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 3">AND id LIKE CONCAT('%',#{shValue},'%')</when>
		</choose>
	</sql>
	
	<!-- <select id="selectList" resultMap="resultMapObj">
		select 
			u.seq
		    ,u.name
		    ,u.id
		    ,u.email
		    ,u.gender
		    ,u.dob
		    ,u.radio_operator
		    ,u.phone
		    ,u.zip
		    ,u.address
		    ,u.address_detail
		    ,u.job
		    ,date_format(u.createdAt, '%Y-%m-%d %H:%i:%s') as createdAt
		    ,date_format(u.modifiedAt, '%Y-%m-%d %H:%i:%s') as modifiedAt
		    ,u.user_div
		    ,u.uDelNy
			,t.teamName as team
		from user u
		inner join teamUser tu on tu.user_seq = u.seq
		inner join team t on t.teamSeq = tu.team_seq
		where 1=1
			and tu.defaultNY = 0
			
			<if test="shDelNy != null and !shDelNy.equals('')">AND uDelNy = #{shDelNy}</if>
			<choose>
				<when test="shDate == 1">AND createdAt BETWEEN #{startDate} AND #{endDate}</when>
				<otherwise></otherwise>
			</choose>
			<choose>
				<when test="shOption == 1">AND seq = #{shValue}</when>
				<when test="shOption == 2">AND name LIKE CONCAT('%', #{shValue}, '%')</when>
				<when test="shOption == 3">AND id LIKE CONCAT('%', #{shValue}, '%')</when>
			</choose>
	</select> -->
	
	<select id="selectList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql" />
			select 
				u.seq
			    ,u.name
			    ,u.id
			    ,u.email
			    ,u.gender
			    ,u.dob
			    ,u.radio_operator
			    ,u.phone
			    ,u.zip
			    ,u.address
			    ,u.address_detail
			    ,u.job
			    ,date_format(u.createdAt, '%Y-%m-%d %H:%i:%s') as createdAt
			    ,date_format(u.modifiedAt, '%Y-%m-%d %H:%i:%s') as modifiedAt
			    ,u.user_div
			    ,u.uDelNy
				,t.teamName as team
			<include refid="selectCommon"></include>
			ORDER BY u.seq DESC
			<include refid="Base.orderByLimitForMysql" />
		<include refid="Base.selectListLowerForMysql" />
	</select>
	
	<select id="selectList1" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql" />
			select 
				u.seq
			    ,u.name
			    ,u.id
			    ,u.email
			    ,u.gender
			    ,u.dob
			    ,u.radio_operator
			    ,u.phone
			    ,u.zip
			    ,u.address
			    ,u.address_detail
			    ,u.job
			    ,date_format(u.createdAt, '%Y-%m-%d %H:%i:%s') as createdAt
			    ,date_format(u.modifiedAt, '%Y-%m-%d %H:%i:%s') as modifiedAt
			    ,u.user_div
			    ,u.uDelNy
				,t.teamName as team
			<include refid="selectCommon"></include>
			ORDER BY u.seq DESC
			<include refid="Base.orderByLimitForMysql" />
			) aa
	</select>
	
	<select id="selectOneCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon" />
	</select>
	
	<select id="selectOne" resultMap="resultMapObj">
		select 
			u.seq
		    ,u.name
		    ,u.id
		    ,u.email
		    ,u.gender
		    ,u.dob
		    ,u.radio_operator
		    ,u.phone
		    ,u.zip
		    ,u.address
		    ,u.address_detail
		    ,u.job
		    ,date_format(u.createdAt, '%Y-%m-%d %H:%i:%s') as createdAt
		    ,date_format(u.modifiedAt, '%Y-%m-%d %H:%i:%s') as modifiedAt
		    ,u.user_div
		    ,u.uDelNy
		    ,u.sns_type
		    ,t.abroadNy as abroadNy
            ,t.event as event
            ,t.league as league
			,t.teamName as team
		from user u
			inner join teamUser tu on tu.user_seq = u.seq
			inner join team t on t.teamSeq = tu.team_seq
			inner join userUploaded uu on uu.pseq = u.seq
		where 1=1
			and u.seq = #{seq}
			and tu.defaultNY = 0
	</select>

	<select id="profileOne" resultMap="resultMapObj">
		select 
			u.seq
		    ,u.name
		    ,u.id
		    ,u.email
			,uu.path
			,uu.uuidName
		from user u
			inner join userUploaded uu on uu.pseq = u.seq
		where 1=1
			and u.seq = #{seq}
	</select>
	
	<select id="snsSelectOne" resultMap="resultMapObj">
		select 
			u.seq
		    ,u.name
		    ,u.id
		    ,u.email
		    ,u.gender
		    ,u.dob
		    ,u.radio_operator
		    ,u.phone
		    ,u.zip
		    ,u.address
		    ,u.address_detail
		    ,u.job
		    ,date_format(u.createdAt, '%Y-%m-%d %H:%i:%s') as createdAt
		    ,date_format(u.modifiedAt, '%Y-%m-%d %H:%i:%s') as modifiedAt
		    ,u.user_div
		    ,u.uDelNy
		    ,u.sns_type
			,t.abroadNy as abroadNy
            ,t.event as event
            ,t.league as league
			,t.teamName as team
		from user u
			inner join teamUser tu on tu.user_seq = u.seq
			inner join team t on t.teamSeq = tu.team_seq
		where 1=1
			and u.seq = #{seq}
			and tu.defaultNY = 0
	</select>
	
	<!-- user insert -->
	<insert id="userInsert">
		INSERT INTO user (
			name
			,id
			,email
			,pwd
			,gender
			,dob
			,radio_operator
			,phone
			,zip
			,address
			,address_detail
			,job
			,createdAt
			,modifiedAt
			,user_div
			,uDelNy
			,sns_type
		)
		VALUES (
			#{name}
			,#{id}
			,#{email}
			,#{pwd}
			,#{gender}
			,#{dob}
			,#{radio_operator}
			,#{phone}
			,#{zip}
			,#{address}
			,#{address_detail}
			,#{job}
			,now()
			,now()
			,25
			,0
			,0
		)
		<selectKey resultType="String" keyProperty="seq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<!-- team insert -->
	<insert id="teamInsert">
		INSERT INTO teamUser (
			team_seq
			,user_seq
			,deleteNY
			,defaultNY
		)
		VALUES (
			<choose>
				<when test="team_seq == null">1</when>
				<otherwise>#{team}-24</otherwise>
			</choose>
			,#{seq}
			,0
			,0
		)
		<selectKey resultType="String" keyProperty="tuSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<!-- user Update -->
	<update id="userUpdate">
		UPDATE user
		SET
			name = #{name}
			,id = #{id}
			,dob = #{dob}
			,email = #{email}
			,phone = #{phone}
			,gender = #{gender}
			,job = #{job}
			,zip = #{zip}
			,address = #{address}
			,address_detail = #{address_detail}
			,modifiedAt = now()
		where 1=1
			and seq = #{seq}
	</update>

	<update id="userXUpdate">
		UPDATE user
		SET
			user_div = #{user_div}
		where 1=1
			and seq = #{seq}
	</update>
	
	<!-- team Update -->
	<update id="teamUpdate">
		UPDATE teamUser
		SET
			team_seq = #{team}-24
		where 1=1
			and user_seq = #{seq}
		    and defaultNY = 0
	</update>
	
	<update id="memberUele">
		UPDATE user
		SET
			uDelNy = 1
		where 1=1
			and seq = #{seq}
	</update>
	
	<!-- id중복 관련 -->
	<select id="idCheck" parameterType="String" resultType="int">
		select count(*) from user where id = #{id}
	</select>
	
	<!-- login 관련 -->
	<select id="loginCheck" resultMap="resultMapObj">
		select 
			u.seq
			,u.id
			,u.name
			,u.email
			,u.pwd
			,u.user_div
			,u.snsImg
			,u.sns_type
		from user u
		where 1=1 
			and id = #{id} 
			and uDelNy = 0
	</select>

	<select id="snsLoginCheck" resultMap="resultMapObj">
		select 
			u.seq
			,u.id
			,u.name
			,u.email
			,u.user_div
			,u.snsImg
			,u.sns_type
		from user u
		where 1=1 
			and name = #{name}
			and email = #{email}
			and uDelNy = 0
	</select>

	<select id="xdminLoginCheck" resultMap="resultMapObj">
		select 
			u.seq
			,u.id
			,u.name
			,u.email
			,u.pwd
			,u.user_div
			,u.sns_type
		from user u
		where 1=1 
			and id = #{id} 
			and pwd = #{pwd}
			and user_div = 7
			and uDelNy = 0
	</select>

	<select id="findId" resultMap="resultMapObj">
		select
			u.id
		from user u
		where 1=1
			and name = #{name}
			and dob = #{dob}
			and phone = #{phone}
	</select>
	
	<select id="findPwd" parameterType="String" resultType="int">
		select 
			count(*)
		from user u
		where 1=1
			and id = #{id}
			and name = #{name}
			and dob = #{dob}
	</select>

	<update id="changePwd">
		UPDATE user
		SET
			pwd = #{pwd}
		where 1=1
			and id = #{id}
			and name = #{name}
			and dob = #{dob}
	</update>
	
	<insert id="naverInst">
		INSERT INTO user (
			id
			,name
			,email
			,gender
			,dob
			,createdAt
			,user_div
			,sns_type
			,uDelNy
			,snsImg
			,phone
		)
		VALUES (
			#{snsId}
			,#{name}
			,#{email}
			,#{gender}
			,#{dob}
			,now()
			,8
			,1
			,0
			,#{snsImg}
			,#{phone}
		)
		<selectKey resultType="String" keyProperty="seq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<insert id="kakaoInst">
		INSERT INTO user (
			id
			,name
			,email
			,gender
			,dob
			,createdAt
			,user_div
			,sns_type
			,uDelNy
			,snsImg
		)
		VALUES (
			#{snsId}
			,#{name}
			,#{email}
			,#{gender}
			,#{dob}
			,now()
			,8
			,2
			,0
			,#{snsImg}
		)
		<selectKey resultType="String" keyProperty="seq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>

</mapper>