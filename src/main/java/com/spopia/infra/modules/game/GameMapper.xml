<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spopia.infra.modules.game.GameMapper">

    <resultMap id="resultMapObj" type="com.spopia.infra.modules.game.Game"></resultMap>
    
   <sql id ="selectCommon">
		from game g
			inner join team t1 on t1.teamSeq = g.team_home
			inner join team t2 on t2.teamSeq = g.team_away
		where 1=1
			and g.gcDelNy = 0
		    <if test="shDelNy != null and !shDelNy.equals('')">AND gcDelNy = #{shDelNy}</if>
			<choose>
				<when test="shOption == 1">AND seq = #{shValue}</when>
				<when test="shOption == 2">AND gameDate LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 3">AND team_home LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 4">AND team_away LIKE CONCAT('%',#{shValue},'%')</when>
				<otherwise></otherwise>
			</choose>
			<choose>
				<when test="shDate == 1">AND createdAt BETWEEN #{startDate} AND #{endDate}</when>
				<otherwise></otherwise>
			</choose>
	</sql>
	
	<select id="selectList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql" />
			select 
				g.seq
				,g.abroadNy
			    ,g.event
			    ,g.league
			    ,g.score_home
			    ,g.score_away
			    ,g.player_home
			    ,g.player_away
			    ,g.stadium
			    ,g.gameDate
			    ,g.gameDuration
			    ,g.createdAt
			    ,g.modifiedAt
			    ,g.gcDelNy
			    ,t1.teamName as team_home
			    ,t2.teamName as team_away
		    <include refid="selectCommon"></include>
		    ORDER BY 
		    	g.gameDate ASC
		    	,g.gameDuration ASC
		   	<include refid="Base.orderByLimitForMysql" />
	   	<include refid="Base.selectListLowerForMysql" />
	</select>
	
	<select id="selectList1" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql" />
			select 
				g.seq
				,g.abroadNy
			    ,g.event
			    ,g.league
			    ,g.score_home
			    ,g.score_away
			    ,g.player_home
			    ,g.player_away
			    ,g.stadium
			    ,g.gameDate
			    ,g.gameDuration
			    ,g.createdAt
			    ,g.modifiedAt
			    ,g.gcDelNy
			    ,t1.teamName as team_home
			    ,t2.teamName as team_away
		    <include refid="selectCommon"></include>
		    ORDER BY 
		    	g.gameDate DESC
		    	,g.gameDuration DESC
		   	<include refid="Base.orderByLimitForMysql" />
		   	) aa
	</select>
	
	<select id="selectOneCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon" />
	</select>
	
	<select id="selectOne" resultMap="resultMapObj">
		select
			g.seq
			,g.abroadNy
		    ,g.event
		    ,g.league
		    ,g.score_home
		    ,g.score_away
		    ,g.player_home
		    ,g.player_away
		    ,g.stadium
		    ,DATE_FORMAT(g.gameDate, '%m.%d') as gameDate
		    ,DATE_FORMAT(g.gameDuration, '%H:%i') as gameDuration
		    ,g.createdAt
		    ,g.modifiedAt
		    ,g.gcDelNy
		    ,t1.teamName as team_home
		    ,t2.teamName as team_away
		from game g
			inner join team t1 on t1.teamSeq = g.team_home
			inner join team t2 on t2.teamSeq = g.team_away
		where 1=1
			AND g.seq = #{seq}
	</select>
	
	<insert id="insert">
		INSERT INTO game (
			abroadNy
			,event
			,league
			,team_home
			,team_away
			,score_home
			,score_away
			,player_home
			,player_away
			,stadium
			,gameDate
			,gameDuration
			,createdAt
			,modifiedAt
		) 
		VALUES (
			#{abroadNy}
			,#{event}
			,#{league}
			,#{team_home}
			,#{team_away}
			,#{score_home}
			,#{score_away}
			,#{player_home}
			,#{player_away}
			,#{stadium}
			,#{gameDate}
			,#{gameDuration}
			,now()
			,now()
		)
		<selectKey resultType="String" keyProperty="seq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<update id="update">
		UPDATE game 
		SET
			abroadNy = #{abroadNy}
			,event = #{event}
			,league = #{league}
			,score_home = #{score_home}
			,score_away = #{score_away}
			,player_home = #{player_home}
			,player_away = #{player_away}
			,stadium = #{stadium}
			,gameDate = #{gameDate}
			,gameDuration = #{gameDuration}
			,team_home = #{team_home}
			,team_away = #{team_away}
			,modifiedAt = now()
		WHERE 1=1
			and seq = #{seq}
	</update>

</mapper>